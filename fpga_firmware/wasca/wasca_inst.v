	wasca u0 (
		.abus_avalon_sdram_bridge_0_abus_address                     (<connected-to-abus_avalon_sdram_bridge_0_abus_address>),                     //                  abus_avalon_sdram_bridge_0_abus.address
		.abus_avalon_sdram_bridge_0_abus_read                        (<connected-to-abus_avalon_sdram_bridge_0_abus_read>),                        //                                                 .read
		.abus_avalon_sdram_bridge_0_abus_waitrequest                 (<connected-to-abus_avalon_sdram_bridge_0_abus_waitrequest>),                 //                                                 .waitrequest
		.abus_avalon_sdram_bridge_0_abus_addressdata                 (<connected-to-abus_avalon_sdram_bridge_0_abus_addressdata>),                 //                                                 .addressdata
		.abus_avalon_sdram_bridge_0_abus_chipselect                  (<connected-to-abus_avalon_sdram_bridge_0_abus_chipselect>),                  //                                                 .chipselect
		.abus_avalon_sdram_bridge_0_abus_direction                   (<connected-to-abus_avalon_sdram_bridge_0_abus_direction>),                   //                                                 .direction
		.abus_avalon_sdram_bridge_0_abus_disable_out                 (<connected-to-abus_avalon_sdram_bridge_0_abus_disable_out>),                 //                                                 .disable_out
		.abus_avalon_sdram_bridge_0_abus_interrupt                   (<connected-to-abus_avalon_sdram_bridge_0_abus_interrupt>),                   //                                                 .interrupt
		.abus_avalon_sdram_bridge_0_abus_muxing                      (<connected-to-abus_avalon_sdram_bridge_0_abus_muxing>),                      //                                                 .muxing
		.abus_avalon_sdram_bridge_0_abus_writebyteenable_n           (<connected-to-abus_avalon_sdram_bridge_0_abus_writebyteenable_n>),           //                                                 .writebyteenable_n
		.abus_avalon_sdram_bridge_0_abus_reset                       (<connected-to-abus_avalon_sdram_bridge_0_abus_reset>),                       //                                                 .reset
		.abus_avalon_sdram_bridge_0_sdram_addr                       (<connected-to-abus_avalon_sdram_bridge_0_sdram_addr>),                       //                 abus_avalon_sdram_bridge_0_sdram.addr
		.abus_avalon_sdram_bridge_0_sdram_ba                         (<connected-to-abus_avalon_sdram_bridge_0_sdram_ba>),                         //                                                 .ba
		.abus_avalon_sdram_bridge_0_sdram_cas_n                      (<connected-to-abus_avalon_sdram_bridge_0_sdram_cas_n>),                      //                                                 .cas_n
		.abus_avalon_sdram_bridge_0_sdram_cke                        (<connected-to-abus_avalon_sdram_bridge_0_sdram_cke>),                        //                                                 .cke
		.abus_avalon_sdram_bridge_0_sdram_cs_n                       (<connected-to-abus_avalon_sdram_bridge_0_sdram_cs_n>),                       //                                                 .cs_n
		.abus_avalon_sdram_bridge_0_sdram_dq                         (<connected-to-abus_avalon_sdram_bridge_0_sdram_dq>),                         //                                                 .dq
		.abus_avalon_sdram_bridge_0_sdram_dqm                        (<connected-to-abus_avalon_sdram_bridge_0_sdram_dqm>),                        //                                                 .dqm
		.abus_avalon_sdram_bridge_0_sdram_ras_n                      (<connected-to-abus_avalon_sdram_bridge_0_sdram_ras_n>),                      //                                                 .ras_n
		.abus_avalon_sdram_bridge_0_sdram_we_n                       (<connected-to-abus_avalon_sdram_bridge_0_sdram_we_n>),                       //                                                 .we_n
		.abus_avalon_sdram_bridge_0_sdram_clk                        (<connected-to-abus_avalon_sdram_bridge_0_sdram_clk>),                        //                                                 .clk
		.altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_cmd   (<connected-to-altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_cmd>),   // altera_up_sd_card_avalon_interface_0_conduit_end.b_SD_cmd
		.altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat   (<connected-to-altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat>),   //                                                 .b_SD_dat
		.altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat3  (<connected-to-altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat3>),  //                                                 .b_SD_dat3
		.altera_up_sd_card_avalon_interface_0_conduit_end_o_SD_clock (<connected-to-altera_up_sd_card_avalon_interface_0_conduit_end_o_SD_clock>), //                                                 .o_SD_clock
		.altpll_1_areset_conduit_export                              (<connected-to-altpll_1_areset_conduit_export>),                              //                          altpll_1_areset_conduit.export
		.altpll_1_locked_conduit_export                              (<connected-to-altpll_1_locked_conduit_export>),                              //                          altpll_1_locked_conduit.export
		.altpll_1_phasedone_conduit_export                           (<connected-to-altpll_1_phasedone_conduit_export>),                           //                       altpll_1_phasedone_conduit.export
		.audio_out_BCLK                                              (<connected-to-audio_out_BCLK>),                                              //                                        audio_out.BCLK
		.audio_out_DACDAT                                            (<connected-to-audio_out_DACDAT>),                                            //                                                 .DACDAT
		.audio_out_DACLRCK                                           (<connected-to-audio_out_DACLRCK>),                                           //                                                 .DACLRCK
		.buffered_spi_mosi                                           (<connected-to-buffered_spi_mosi>),                                           //                                     buffered_spi.mosi
		.buffered_spi_clk                                            (<connected-to-buffered_spi_clk>),                                            //                                                 .clk
		.buffered_spi_miso                                           (<connected-to-buffered_spi_miso>),                                           //                                                 .miso
		.buffered_spi_cs                                             (<connected-to-buffered_spi_cs>),                                             //                                                 .cs
		.clk_clk                                                     (<connected-to-clk_clk>),                                                     //                                              clk.clk
		.clock_116_mhz_clk                                           (<connected-to-clock_116_mhz_clk>),                                           //                                    clock_116_mhz.clk
		.reset_reset_n                                               (<connected-to-reset_reset_n>),                                               //                                            reset.reset_n
		.reset_controller_0_reset_in1_reset                          (<connected-to-reset_controller_0_reset_in1_reset>),                          //                     reset_controller_0_reset_in1.reset
		.uart_0_external_connection_rxd                              (<connected-to-uart_0_external_connection_rxd>),                              //                       uart_0_external_connection.rxd
		.uart_0_external_connection_txd                              (<connected-to-uart_0_external_connection_txd>)                               //                                                 .txd
	);

